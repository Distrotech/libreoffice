/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#include <com/sun/star/uno/XInterface.idl>

module com { module sun { module star { module lib { module uno {
module bridges { module javaremote {

enum TestEnum { VALUE1 = 100, VALUE2 = -100 };

struct TestPolyStruct<T> { T member; };

interface TestTransport {
    TestPolyStruct<boolean> transportBoolean([in] TestPolyStruct<boolean> arg);
    TestPolyStruct<byte> transportByte([in] TestPolyStruct<byte> arg);
    TestPolyStruct<short> transportShort([in] TestPolyStruct<short> arg);
    TestPolyStruct<long> transportLong([in] TestPolyStruct<long> arg);
    TestPolyStruct<hyper> transportHyper([in] TestPolyStruct<hyper> arg);
    TestPolyStruct<float> transportFloat([in] TestPolyStruct<float> arg);
    TestPolyStruct<double> transportDouble([in] TestPolyStruct<double> arg);
    TestPolyStruct<char> transportChar([in] TestPolyStruct<char> arg);
    TestPolyStruct<string> transportString([in] TestPolyStruct<string> arg);
    TestPolyStruct<type> transportType([in] TestPolyStruct<type> arg);
    TestPolyStruct<any> transportAny([in] TestPolyStruct<any> arg);
    TestPolyStruct<TestEnum> transportEnum([in] TestPolyStruct<TestEnum> arg);
};

}; }; }; }; }; }; };

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
